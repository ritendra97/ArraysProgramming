import java.util.*;

// TC => O(n!n)
public class Solution 
{
	public static void allpermutationofanarrayUtil(List<ArrayList<Integer>> res,int arr[],boolean visited[],List<Integer> curr)
	{
		if(curr.size()==visited.length)
		{
			res.add(new ArrayList(curr));
			return;
		}
		
		for(int i=0;i<arr.length;i++)
		{
			if(visited[i]==true)
				continue;
			visited[i]=true;
			curr.add(arr[i]);
			allpermutationofanarrayUtil(res,arr,visited,curr);
			visited[i] = false;
			curr.remove(curr.size()-1);
		}
	}
	public static List<ArrayList<Integer>> allpermutationofanarray(int arr[])
	{
		List<ArrayList<Integer>> res  = new ArrayList<ArrayList<Integer>>();
		ArrayList<Integer> curr = new ArrayList<Integer>();
		boolean visited[] = new boolean[arr.length];
		
		allpermutationofanarrayUtil(res,arr,visited,curr);
		
		return res;
	}
	public static void main(String[] args) 
	{	
		int arr[] = {1, 2, 3, 6, 5, 4};
		
		System.out.println(allpermutationofanarray(arr));
    }
}
