//Maximum of all subarrays of size k
import java.util.*;
public class Solution 
{
	static ArrayList <Integer> max_of_subarrays(int arr[], int n, int k)
    {
         ArrayList<Integer> ans = new ArrayList<Integer>();
         Deque<Integer> dq = new LinkedList<>();
         int i=0;
         for(;i<k;i++)
         {
        	 while(!dq.isEmpty() && arr[dq.peekLast()]<=arr[i])
        	 {
        		 dq.removeLast();
        	 }
        	 dq.addLast(i);
         }
         for(;i<n;i++)
         {
        	 ans.add(arr[dq.peekFirst()]);
        	 while(!dq.isEmpty() && dq.peekFirst()<=i-k)
        	 {
        		 dq.removeFirst();
        	 }
        	 while(!dq.isEmpty() && arr[dq.peekLast()]<=arr[i])
        	 {
        		 dq.removeLast();
        	 }
        	 dq.addLast(i);
         }
         ans.add(arr[dq.peekFirst()]);
         return ans;
    }
	public static void main(String[] args) 
	{
		int arr[]= {1, 2, 3, 1, 4, 5, 2, 3, 6};
		int k=3;
		int n=arr.length;
		System.out.println(max_of_subarrays(arr,n,k));
	}
}
