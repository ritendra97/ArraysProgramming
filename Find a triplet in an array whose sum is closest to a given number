import java.util.Arrays;

// nive method
import java.util.*;
public class Solution 
{
	static int threeSumClosest(int[] arr, int target)  
	{ 
		int n = arr.length;
		int closest_sum = Integer.MAX_VALUE;
		for(int i =0;i<n;i++)
		{
			for(int j = i+1;j<n;j++)
			{
				for(int k =j+1;k<n;k++)
				{
					int a = Math.abs(target-closest_sum);
					int b = Math.abs(target-(arr[i]+arr[j]+arr[k]));
					if(a>b)
						closest_sum = arr[i]+arr[j]+arr[k];
				}
			}
		}
		return closest_sum;
	} 
	public static void main(String[] args) 
	{
		int n = 6, target = 2;
		int arr[] = {-7,9,8,3,1,1};
		
		System.out.println(threeSumClosest(arr,target));
	}
}

public class Solution 
{
	static int threeSumClosest(int array[], int target)
	{
		Arrays.sort(array);
		int closest = Integer.MAX_VALUE;
		int sum=0;
		int k;
		for(k=0;k<array.length-2;k++);
		{
			int l=k+1;
			int j=array.length-1;
			while(l<j)
			{
				sum=array[k]+array[l]+array[j];
				if (Math.abs(target - sum) < closest) 
	            {
	                closest = sum;
	            }
				if(sum>target)
					j--;
				else
					l++;
			}
		}
		return closest;
	}
	public static void main(String[] args) 
	{
		int array[] = {-1,2,1,-4};
		System.out.println(threeSumClosest(array,1));
	}
}
 
