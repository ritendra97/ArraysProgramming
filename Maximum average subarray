//Maximum average subarray

import java.util.Arrays;

public class Practice {

	public static double findmissingNumber(int arr[]) {

		int k = 4;
		double max_avg = Integer.MIN_VALUE;
		int sum = 0;
		int start = 0;
		
		for (int i = 0; i < arr.length; i++) {
			
			sum += arr[i];
			if (i - start + 1 == k) {
				if (sum / k > max_avg)
					max_avg = sum / k;
				sum = sum-arr[start++];
			}
		}

		return max_avg;
	}

	public static void main(String[] args) {

		int arr[] = { 1, 12, -5, -6, 50, 3 };
		System.out.println(findmissingNumber(arr));
	}
}


public class Solution 
{
	static int findMaxAverage(int[] arr, int n, int k) 
    {
        int i=0;
        int j=0;
        int sum=0;
        int ws=0;
        int maxsum=Integer.MIN_VALUE;
        while(j<n)
        {
        	ws+=1;
        	sum=sum+arr[j];
        	if(j<n)
        		j++;
        	if(ws>=k)
        	{
        		int ans=sum/ws;
        		if(maxsum<ans)
        		{
        			maxsum=ans;
        		}
        	    sum=sum-arr[i];
        		i++;
        		ws=k-1;
        	}
        }
        return maxsum;
    }
	public static void main(String[] args) 
	{
		int arr[] = {1, 12, -5, -6, 50, 3};
		int n=arr.length;
		System.out.println(findMaxAverage(arr,n,4));
	}
}
