public class Solution 
{
	static int bitonic(int arr[],int n)
	{
		int temp1[] = new int[n];
		int temp2[] = new int[n];
		for(int i=0;i<n;i++)
		{
			temp1[i]=1;
			temp2[i]=1;
		}
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<n;j++)
			{
				if(arr[i]>arr[j] && temp1[i]<=temp1[j])
					temp1[i]=temp1[j]+1;
			}
		}
		for(int i=n-2;i>=0;i--)
		{
			for(int j=n-1;j>=i;j--)
			{
				if(arr[i]>arr[j] && temp2[i]<=temp2[j])
					temp2[i]=temp2[j]+1;
			}
		}
		int max=0;
		int maxindex=0;
		for(int i=0;i<n;i++)
		{
			if(temp1[i]+temp2[i]-1>max)
			{
				max=temp1[i]+temp2[i]-1;
				maxindex=i;
			}
		}
		return arr[maxindex];
	}
	public static void main(String[] args) 
	{
		int arr[] = {2,-1,4,3,5,-1,3,2}; 
		int n = arr.length;
		System.out.println(bitonic(arr,n));
	}
}
